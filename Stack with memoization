import java.io.*;
import java.util.*;

/*
 * Stack w/ memoization to return Max element
 */

class Solution {
  public static void main(String[] args) {
    Mystack s = new Mystack();
    s.push(1);
    s.push(10);
    s.push(2);
    s.push(10);
    s.push(3);
    s.getMax();
    s.pop();//pop 3
    s.getMax();
    s.pop();//pop 10
    s.getMax();
    s.pop();//pop 2
    s.getMax();
    s.pop();// pop 10
    s.getMax();
    
    
    
  }
}

class Mystack{
  Stack<Integer> s = new Stack<Integer>();
  int max;
  void getMax(){
    if(s.empty())
      System.out.println("Empty stack");
    else
      System.out.println("Max element: "+max);
  }
  void push(int a){
    if(s.empty()){
      max= a;
      s.push(a);
    }else{
      if(a>max)
        max=a;
      s.push(a);
    }
  }
  void pop(){
    if(s.empty())
      System.out.println("Stack is empty");
    else{
      int x = s.pop();
      System.out.println("Pop: "+x+ " Size: "+s.size());
      if(x==max){
        max=0;
        for(int i=0;i<s.size();i++){
          max = Math.max(s.elementAt(i), max);
          System.out.println("Max : "+max+" Element at "+i+" "+s.elementAt(i));
        }
      }
    }
  }
}

